# OSCAL Compliance Factory - Environment Configuration Template
# Copy this file to .env and customize values for your environment

# ============================================================================
# Application Settings
# ============================================================================
DEBUG=false
VERSION=0.1.0
PROJECT_NAME="OSCAL Compliance Factory"
API_V1_STR="/api/v1"

# Security
SECRET_KEY=change-me-in-production-use-openssl-rand-base64-32
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# ============================================================================
# Database Configuration
# ============================================================================
DATABASE_URL=postgresql://postgres:change-me-strong-password@db:5432/compliance_factory

# For local development (when not using Docker):
# DATABASE_URL=postgresql://postgres:change-me-strong-password@localhost:5432/compliance_factory

# PostgreSQL specific settings
POSTGRES_DB=compliance_factory
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change-me-strong-password

# ============================================================================
# MinIO/S3 Storage Configuration  
# ============================================================================
MINIO_ENDPOINT=minio:9000
MINIO_ACCESS_KEY=admin
MINIO_SECRET_KEY=password123
MINIO_BUCKET=compliance-artifacts
MINIO_SECURE=false

# For local development (when not using Docker):
# MINIO_ENDPOINT=localhost:9000

# ============================================================================
# OSCAL Configuration
# ============================================================================
OSCAL_CLI_PATH=/opt/oscal-cli/oscal-cli
OSCAL_VERSION=1.1.3
NIST_SP800_53_VERSION=5.2.0

# ============================================================================
# FedRAMP Configuration  
# ============================================================================
FEDRAMP_REGISTRY_URL=https://github.com/GSA/fedramp-automation/raw/master/
FEDRAMP_BASELINE=low

# ============================================================================
# File Processing
# ============================================================================
MAX_UPLOAD_SIZE=52428800
WORKSPACE_DIR=/app/workspace
CONTENT_DIR=/app/content

# For local development:
# WORKSPACE_DIR=./workspace
# CONTENT_DIR=./content

# ============================================================================
# Logging Configuration
# ============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# For development (human-readable logs):
# LOG_FORMAT=text

# ============================================================================
# Cloud.gov Configuration (Production)
# ============================================================================
# These are automatically set by cloud.gov platform
# VCAP_SERVICES={}
# VCAP_APPLICATION={}

# ============================================================================
# Development & Testing Overrides
# ============================================================================
# Uncomment for local development
# DEBUG=true
# LOG_LEVEL=DEBUG
# LOG_FORMAT=text
# MINIO_ENDPOINT=localhost:9000
# DATABASE_URL=postgresql://postgres:dev-password@localhost:5432/compliance_factory_dev

# ============================================================================
# Docker Compose Variables
# ============================================================================
# These are used by docker-compose.yml
COMPOSE_PROJECT_NAME=compliance-factory

# ============================================================================
# Security Notes
# ============================================================================
# 1. Change all default passwords before deploying to any environment
# 2. Use strong, randomly generated secrets in production
# 3. Never commit this file with real credentials to version control
# 4. For cloud.gov deployment, use environment variables or CredHub
# 5. Generate SECRET_KEY with: openssl rand -base64 32
# 6. Generate passwords with: openssl rand -base64 24

# ============================================================================
# Quick Start Commands
# ============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Edit values above (especially passwords)
# 3. Start services: task up
# 4. Check health: curl http://localhost:8000/healthz
# 5. Browse API docs: http://localhost:8000/docs
# 6. MinIO console: http://localhost:9001 (admin/password123)